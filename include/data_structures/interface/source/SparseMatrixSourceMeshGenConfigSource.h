/**
 * @file
 * @author University of Warwick
 * @version 1.0
 *
 * @section LICENSE
 *
 * @section DESCRIPTION
 *
 * Contains declarations for the SparseMatrixSourceMeshGenConfigSource class
 */

#ifndef CUPCFD_DATA_STRUCTURES_SPARSE_MATRIX_SOURCE_MESH_GEN_CONFIG_SOURCE_INCLUDE_H
#define CUPCFD_DATA_STRUCTURES_SPARSE_MATRIX_SOURCE_MESH_GEN_CONFIG_SOURCE_INCLUDE_H

#include "Error.h"
#include "SparseMatrixSourceConfigSource.h"
#include "SparseMatrixSourceFileConfig.h"

namespace cupcfd
{
	namespace data_structures
	{
		/**
		 * Interface class for retrieving data from a configuration data source
		 * for SparseMatrix Mesh Generated Sources
		 */
		template <class I, class T>
		class SparseMatrixSourceMeshGenConfigSource : public SparseMatrixSourceConfigSource<I,T>
		{
			public:
				// === Members ===

				// === Constructors/Deconstructors ===

				/**
				 * Default Constructor
				 *
				 * @tparam The datatype of any indexing scheme
				 * @tparam The datatype of the floating point values
				 */
				SparseMatrixSourceMeshGenConfigSource();

				/**
				 * Deconstructor:
				 *
				 * @tparam I The datatype of any indexing scheme used by the distribution
				 * @tparam T The datatype of the values generated by the distribution
				 */
				virtual ~SparseMatrixSourceMeshGenConfigSource();

				// === Concrete Methods ===

				// === Virtual Methods ===

				__attribute__((warn_unused_result))
				virtual SparseMatrixSourceMeshGenConfigSource<I,T> * clone() = 0;
				
				__attribute__((warn_unused_result))
				virtual cupcfd::error::eCodes buildSparseMatrixSourceConfig(SparseMatrixSourceConfig<I,T> ** matrixSourceConfig) = 0;
		};
	}
}

// Include Header Level Definitions
#include "SparseMatrixSourceMeshGenConfigSource.ipp"

#endif
